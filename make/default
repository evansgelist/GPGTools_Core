all: compile

deploy: compile
	@./Dependencies/GPGTools_Core/scripts/create_dmg.sh auto
	@./Dependencies/GPGTools_Core/scripts/upload.sh

check-all-warnings: clean
	make compile | grep "warning: "

check-warnings: clean
	make compile | grep "warning: "|grep -v "#warning"

check: clean
	@if [ "`which scan-build`" == "" ]; then echo 'usage: PATH=$PATH:$path_to_scan_build make check'; echo "see: http://clang-analyzer.llvm.org/"; exit 1; fi
	@scan-build --use-cc clang -o build/report \
	    xcodebuild -project $(PROJECT).xcodeproj -target $(TARGET) \
	    -configuration $(CONFIG) build
style:
	@if [ "`which uncrustify`" == "" ]; then echo 'usage: PATH=$$PATH:path_to_uncrustify make style'; echo "see: https://github.com/bengardner/uncrustify"; exit 1; fi
	uncrustify -c ./Dependencies/GPGTools_Core/resources/uncrustify.cfg --no-backup Source/*.h
	uncrustify -c ./Dependencies/GPGTools_Core/resources/uncrustify.cfg --no-backup Source/*.m

dmg: update compile
#	@./Dependencies/GPGTools_Core/scripts/create_dmg.sh
	@./Dependencies/GPGTools_Core/scripts/create_dmg.sh auto buildbot

dmg-auto: update compile
	@./Dependencies/GPGTools_Core/scripts/create_dmg.sh auto buildbot

show-missing-deps:
	@git submodule foreach 'git log --pretty=format:"missing: %h %s (see https://github.com/GPGTools/"`basename $$name`"/commit/%h)" $$sha1...master; echo; echo "https://github.com/GPGTools/"`basename $$name`"/compare/$$sha1...master"; echo'

